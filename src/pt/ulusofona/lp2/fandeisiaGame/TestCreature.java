package pt.ulusofona.lp2.fandeisiaGame;

import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class TestCreature {
    @Test
    public void testeCrature(){
        Creature c1 = new Anao(1, "An達o", 10, 10, 10, "Norte");
        Spell c2 = new Congela("Congela");
        Treasure t1 = new Treasure(1, "gold", 5,5);
        Team ldr = new Team(10, "LDR");
        int pontosEsperados = 0;
        assertEquals(pontosEsperados, c1.nrTesouros);
        assertEquals(pontosEsperados, c1.getNrTesouros());
        int idCriatura = 1;
        assertEquals(idCriatura, c1.id);
        assertEquals(idCriatura, c1.getId());
        int custoEsperado = 1;
        assertEquals(custoEsperado, c1.custo);
        assertEquals(custoEsperado, c1.getCusto());
        c1.goldQtd ++;
        int tesouroEsperado = 1;
        assertEquals(tesouroEsperado, c1.getGoldQtd());
        tesouroEsperado = 0;
        assertEquals(tesouroEsperado, c1.getBronzeQtd());
        assertEquals(tesouroEsperado, c1.getSilverQtd());
        c1.adicionarPontos(10);
        pontosEsperados = 10;
        assertEquals(pontosEsperados, c1.getNrTesouros());
        String orientacaoEsperada = "Norte";
        assertEquals(orientacaoEsperada, c1.orientacao);
        assertEquals(orientacaoEsperada, c1.getOrientacao());
        String imagemEsperada = "lagarta_n.png";
        assertEquals(imagemEsperada, c1.getImagePNG());
        String tipoEsperado = "An達o";
        assertEquals(tipoEsperado, c1.getTipo());
        assertEquals(tipoEsperado, c1.tipo);
        String orientacaoEsperada2 = "Este";
        c1.setOrientacao("Este");
        assertEquals(orientacaoEsperada2, c1.getOrientacao());
        String spellEsperado = "";
        assertEquals(spellEsperado, c1.getSpellName());
        String spellEsperado2 = "Congela";
        c1.setSpellName(c2);
        assertEquals(spellEsperado2, c1.getSpellName());
        c1.setImagemCriatura(c1.getOrientacao());
        String imagemEsperada2 = "lagarta_e.png";
        assertEquals(imagemEsperada2, c1.getImagePNG());
    }
    @Test
    public void confereReduzAlcance() throws InsufficientCoinsException {
        FandeisiaGameManager testeCreature = new FandeisiaGameManager();
        String anao = "id: 1, type: An達o, teamId: 10, x: 0, y: 0, orientation: Este";
        String gold = "id: 10, type: gold, x: 2, y: 2";
        String silver = "id: 11, type: silver, x: 3, y: 2";
        String bronze = "id: 12, type: bronze, x: 1, y: 2";
        String dragao = "id: 2, type: Drag達o, teamId: 20, x: 5, y: 5, orientation: Nordeste";
        String buraco = "id: 6, type: hole, x: 4, y: 2";
        String buraco2 = "id: 6, type: hole, x: 1, y: 8";
        String elfo = "id: 2, type: Elfo, teamId: 20, x: 4, y: 4, orientation: Norte";
        String gigante = "id: 2, type: Gigante, teamId: 20, x: 6, y: 2, orientation: Oeste";
        String humano = "id: 2, type: Humano, teamId: 20, x: 4, y: 0, orientation: Sul";
        String bronze2 = "id: 12, type: bronze, x: 6, y: 8";
        String bronze3 = "id: 12, type: bronze, x: 1, y: 7";
        String bronze4 = "id: 12, type: bronze, x: 7, y: 7";
        String bronze5 = "id: 12, type: bronze, x: 8, y: 7";
        String bronze6 = "id: 12, type: bronze, x: 3, y: 7";
        String bronze7 = "id: 12, type: bronze, x: 1, y: 6";
        String[] conj = {anao, gold, dragao, buraco,bronze6,bronze7, silver,bronze5, bronze4, bronze3, buraco2, bronze, elfo, gigante, humano, bronze2};
        testeCreature.startGame(conj, 10, 10);
        Creature h = testeCreature.getCriaturaPorPosicao(4, 0);
        Creature a = testeCreature.getCriaturaPorPosicao(0, 0);
        Creature g = testeCreature.getCriaturaPorPosicao(6, 2);
        Creature e = testeCreature.getCriaturaPorPosicao(4, 4);
        Creature d = testeCreature.getCriaturaPorPosicao(5, 5);
        assert h != null; // humano
        h.reduzAlcance_moveCriatura();
        int x1 = 4;
        int y1 = 1;
        assertEquals(x1, h.getX());
        assertEquals(y1, h.getY());
        h.reduzAlcance_moveCriatura();
        assertEquals(x1, h.getX());
        assertEquals(y1, h.getY());
        String orientacaoEsperada = "Oeste";
        String imagemEsperada = "h_o.png";
        assertEquals(orientacaoEsperada, h.getOrientacao());
        assertEquals(imagemEsperada, h.getImagePNG());
        h.reduzAlcance_moveCriatura();
        h.setOrientacao("Sul");
        h.setImagemCriatura("Sul");
        String orientacaoEsperada3 = "Sul";
        String imagemEsperada3 = "h_s.png";
        assertEquals(orientacaoEsperada3, h.getOrientacao());
        assertEquals(imagemEsperada3, h.getImagePNG());
        h.reduzAlcance_moveCriatura();
        int x2 = 3;
        int y2 = 2;
        String orientacaoEsperada2 = "Sul";
        String imagemEsperada2 = "h_s.png";
        int pontosEsperado = 1;
        int nrTurnoEsperadoSemTesouro = 0;
        int pontosEquipe = 2;
        int tamListaTesouro = 8;
        assertEquals(x2, h.getX());
        assertEquals(y2, h.getY());
        assertEquals(orientacaoEsperada2, h.getOrientacao());
        assertEquals(imagemEsperada2, h.getImagePNG());
        assertEquals(pontosEsperado, h.getNrTesouros());
        assertEquals(nrTurnoEsperadoSemTesouro, testeCreature.nrTurnosSemTesouros);
        assertEquals(pontosEquipe, testeCreature.resistencia.getPontosEquipe());
        int tamListaOriginal = testeCreature.listaTreasures.size();
        assertEquals(tamListaTesouro, tamListaOriginal);
        h.x = 4;
        h.y = 3;
        h.setOrientacao("Norte");
        h.setImagemCriatura("Norte");
        h.reduzAlcance_moveCriatura();
        int x11 = 4;
        int y11 = 3;
        assertEquals(x11, h.getX());
        assertEquals(y11, h.getY());
        h.setOrientacao("Norte");
        h.setImagemCriatura("Norte");
        h.x = 0;
        h.y = 1;
        h.reduzAlcance_moveCriatura();
        int x12 = 0;
        int y12 = 1;
        assertEquals(x12, h.getX());
        assertEquals(y12, h.getY());
        h.x = 6;
        h.y = 9;
        h.setOrientacao("Norte");
        h.setImagemCriatura("Norte");
        h.reduzAlcance_moveCriatura();
        int x13 = 6;
        int y13 = 8;
        assertEquals(x13, h.getX());
        assertEquals(y13, h.getY());
        h.x = 9;
        h.y = 0;
        h.reduzAlcance_moveCriatura();
        int x14 = 9;
        int y14 = 0;
        assertEquals(x14, h.getX());
        assertEquals(y14, h.getY());
        h.setOrientacao("Sul");
        h.setImagemCriatura("Sul");
        h.x = 6;
        h.y = 1;
        h.reduzAlcance_moveCriatura();
        int x15 = 6;
        assertEquals(x15, h.getX());
        h.setOrientacao("Sul");
        h.setImagemCriatura("Sul");
        h.y = 9;
        h.reduzAlcance_moveCriatura();
        assertEquals(x15, h.getX());
        h.setOrientacao("Este");
        h.setImagemCriatura("Este");
        h.x = 0;
        h.y = 8;
        h.reduzAlcance_moveCriatura();
        int x16 = 0;
        assertEquals(x16, h.getX());
        h.setOrientacao("Este");
        h.setImagemCriatura("Este");
        h.x = 4;
        h.y = 5;
        h.reduzAlcance_moveCriatura();
        int x17 = 4;
        assertEquals(x17, h.getX());
        h.setOrientacao("Este");
        h.setImagemCriatura("Este");
        h.x = 0;
        h.y = 7;
        h.reduzAlcance_moveCriatura();
        int x18 = 1;
        assertEquals(x18, h.getX());
        h.setOrientacao("Este");
        h.setImagemCriatura("Este");
        h.x = 9;
        h.reduzAlcance_moveCriatura();
        int x19 = 9;
        assertEquals(x19, h.getX());
        h.setOrientacao("Oeste");
        h.setImagemCriatura("Oeste");
        h.x = 6;
        h.y = 5;
        h.reduzAlcance_moveCriatura();
        int x191 = 6;
        assertEquals(x191, h.getX());
        h.setOrientacao("Oeste");
        h.setImagemCriatura("Oeste");
        h.x = 0;
        h.y = 7;
        h.reduzAlcance_moveCriatura();
        int x192 = 0;
        assertEquals(x192, h.getX());
        assert a != null; // anao, nao pode fazer o reduz.
        a.setOrientacao("Norte");
        a.setImagemCriatura("Norte");
        int x3 = 0;
        int y3 = 0;
        String orien1 = "Norte";
        String img1 = "lagarta_n.png";
        assertEquals(x3, a.getX());
        assertEquals(y3, a.getY());
        assertEquals(orien1, a.getOrientacao());
        assertEquals(img1, a.getImagePNG());
        a.reduzAlcance_moveCriatura();
        String orien2 = "Norte";
        String img2 = "lagarta_n.png";
        assertEquals(x3, a.getX());
        assertEquals(y3, a.getY());
        assertEquals(orien2, a.getOrientacao());
        assertEquals(img2, a.getImagePNG());
        h.x = 0;
        h.y = 9;
        assert g != null; // gigante
        g.reduzAlcance_moveCriatura();
        int x4 = 5;
        int y4 = 2;
        assertEquals(x4, g.getX());
        assertEquals(y4, g.getY());
        g.reduzAlcance_moveCriatura();
        assertEquals(x4, g.getX());
        assertEquals(y4, g.getY());
        String orien3 = "Norte";
        String img3 = "g_n.png";
        assertEquals(orien3, g.getOrientacao());
        assertEquals(img3, g.getImagePNG());
        assert e != null; //elfo
        e.setOrientacao("Nordeste");
        e.setImagemCriatura("Nordeste");
        e.reduzAlcance_moveCriatura();
        int x5 = 5;
        int y5 = 3;
        assertEquals(x5, e.getX());
        assertEquals(y5, e.getY());
        e.setOrientacao("Noroeste");
        e.setImagemCriatura("Noroeste");
        e.reduzAlcance_moveCriatura();
        String orien4 = "Norte";
        String img4 = "e_n.png";
        assertEquals(orien4, e.getOrientacao());
        assertEquals(img4, e.getImagePNG());
        assertEquals(x5, e.getX());
        assertEquals(y5, e.getY());
        e.reduzAlcance_moveCriatura();
        String orien5 = "Nordeste";
        String img5 = "e_ne.png";
        assertEquals(orien5, e.getOrientacao());
        assertEquals(img5, e.getImagePNG());
        e.reduzAlcance_moveCriatura();
        int x6 = 6;
        int y6 = 2;
        assertEquals(x6, e.getX());
        assertEquals(y6, e.getY());
        e.reduzAlcance_moveCriatura();
        e.reduzAlcance_moveCriatura();
        int x7 = 8;
        int y7 = 0;
        assertEquals(x7, e.getX());
        assertEquals(y7, e.getY());
        e.reduzAlcance_moveCriatura();
        assertEquals(x7, e.getX());
        assertEquals(y7, e.getY());
        String orien8 = "Este";
        assertEquals(orien8, e.getOrientacao());
        e.setOrientacao("Norte");
        e.setImagemCriatura("Norte");
        e.x = 4;
        e.y = 3;
        e.reduzAlcance_moveCriatura();
        int x21 = 4;
        assertEquals(x21, e.getX());
        e.setOrientacao("Norte");
        e.setImagemCriatura("Norte");
        e.x = 6;
        e.y = 0;
        e.reduzAlcance_moveCriatura();
        int x22 = 6;
        assertEquals(x22, e.getX());
        e.setOrientacao("Nordeste");
        e.setImagemCriatura("Nordeste");
        e.x = 3;
        e.y = 3;
        e.reduzAlcance_moveCriatura();
        int x23 = 3;
        assertEquals(x23, e.getX());
        e.setOrientacao("Nordeste");
        e.setImagemCriatura("Nordeste");
        e.x = 4;
        e.y = 6;
        e.reduzAlcance_moveCriatura();
        int x24 = 4;
        assertEquals(x24, e.getX());
        e.setOrientacao("Noroeste");
        e.setImagemCriatura("Noroeste");
        e.x = 6;
        e.y = 6;
        e.reduzAlcance_moveCriatura();
        int x25 = 6;
        assertEquals(x25, e.getX());
        e.setOrientacao("Noroeste");
        e.setImagemCriatura("Noroeste");
        e.x = 8;
        e.y = 8;
        e.reduzAlcance_moveCriatura();
        int x26 = 7;
        assertEquals(x26, e.getX());
        e.setOrientacao("Noroeste");
        e.setImagemCriatura("Noroeste");
        e.x = 2;
        e.y = 0;
        e.reduzAlcance_moveCriatura();
        int x27 = 2;
        assertEquals(x27, e.getX());
        e.setOrientacao("Sul");
        e.setImagemCriatura("Sul");
        e.x = 1;
        e.y = 7;
        e.reduzAlcance_moveCriatura();
        int x28 = 1;
        assertEquals(x28, e.getX());
        e.setOrientacao("Sul");
        e.setImagemCriatura("Sul");
        e.x = 0;
        e.y = 8;
        e.reduzAlcance_moveCriatura();
        int x29 = 0;
        assertEquals(x29, e.getX());
        e.setOrientacao("Sul");
        e.setImagemCriatura("Sul");
        e.x = 1;
        e.y = 9;
        e.reduzAlcance_moveCriatura();
        int x221 = 1;
        assertEquals(x221, e.getX());
        e.setOrientacao("Sul");
        e.setImagemCriatura("Sul");
        e.x = 8;
        e.y = 6;
        e.reduzAlcance_moveCriatura();
        int x222 = 8;
        assertEquals(x222, e.getX());
        e.setOrientacao("Sudoeste");
        e.setImagemCriatura("Sudoeste");
        e.x = 6;
        e.y = 4;
        e.reduzAlcance_moveCriatura();
        int x31 = 6;
        assertEquals(x31, e.getX());
        e.setOrientacao("Sudoeste");
        e.setImagemCriatura("Sudoeste");
        e.x = 3;
        e.y = 9;
        e.reduzAlcance_moveCriatura();
        int x32 = 3;
        assertEquals(x32, e.getX());
        e.setOrientacao("Sudoeste");
        e.setImagemCriatura("Sudoeste");
        e.x = 5;
        e.y = 1;
        e.reduzAlcance_moveCriatura();
        int x33 = 5;
        assertEquals(x33, e.getX());
        e.setOrientacao("Sudoeste");
        e.setImagemCriatura("Sudoeste");
        e.x = 4;
        e.y = 6;
        e.reduzAlcance_moveCriatura();
        int x34 = 3;
        assertEquals(x34, e.getX());
        e.setOrientacao("Sudeste");
        e.setImagemCriatura("Sudeste");
        e.x = 0;
        e.y = 5;
        e.reduzAlcance_moveCriatura();
        int x41 = 1;
        assertEquals(x41, e.getX());
        e.x = 7;
        e.y = 9;
        e.reduzAlcance_moveCriatura();
        int x42 = 7;
        assertEquals(x42, e.getX());
        e.setOrientacao("Sudeste");
        e.setImagemCriatura("Sudeste");
        e.x = 4;
        e.y = 4;
        e.reduzAlcance_moveCriatura();
        int x43 = 4;
        assertEquals(x43, e.getX());
        e.setOrientacao("Sudeste");
        e.setImagemCriatura("Sudeste");
        e.x = 0;
        e.y = 7;
        e.reduzAlcance_moveCriatura();
        int x44 = 0;
        assertEquals(x44, e.getX());
        e.setOrientacao("Oeste");
        e.setImagemCriatura("Oeste");
        e.x = 2;
        e.y = 8;
        e.reduzAlcance_moveCriatura();
        int x51 = 2;
        assertEquals(x51, e.getX());
        e.setOrientacao("Oeste");
        e.setImagemCriatura("Oeste");
        e.x = 6;
        e.y = 5;
        e.reduzAlcance_moveCriatura();
        int x52 = 6;
        assertEquals(x52, e.getX());
        e.setOrientacao("Oeste");
        e.setImagemCriatura("Oeste");
        e.x = 0;
        e.y = 5;
        e.reduzAlcance_moveCriatura();
        int x53 = 0;
        assertEquals(x53, e.getX());
        e.setOrientacao("Este");
        e.setImagemCriatura("Este");
        e.x = 9;
        e.y = 4;
        e.reduzAlcance_moveCriatura();
        int x61 = 9;
        assertEquals(x61, e.getX());
        e.setOrientacao("Este");
        e.setImagemCriatura("Este");
        e.x = 4;
        e.y = 5;
        e.reduzAlcance_moveCriatura();
        int x62 = 4;
        assertEquals(x62, e.getX());
        e.setOrientacao("Este");
        e.setImagemCriatura("Este");
        e.x = 0;
        e.y = 8;
        e.reduzAlcance_moveCriatura();
        int x63 = 0;
        assertEquals(x63, e.getX());
        e.setOrientacao("Este");
        e.setImagemCriatura("Este");
        e.x = 0;
        e.y = 6;
        e.reduzAlcance_moveCriatura();
        int x64 = 1;
        assertEquals(x64, e.getX());
        assert d != null; //dragao
        d.setOrientacao("Norte");
        d.setImagemCriatura("Norte");
        d.reduzAlcance_moveCriatura();
        d.reduzAlcance_moveCriatura();
        d.reduzAlcance_moveCriatura();
        int x9 = 5;
        int y9 = 3;
        String orien9 = "Nordeste";
        assertEquals(x9, d.getX());
        assertEquals(y9, d.getY());
        assertEquals(orien9, d.getOrientacao());
        d.x = 2;
        d.y = 3;
        d.setOrientacao("Norte");
        d.setImagemCriatura("Norte");
        int x10 = 2;
        int y10 = 3;
        String orien10 = "Norte";
        assertEquals(x10, d.getX());
        assertEquals(y10, d.getY());
        assertEquals(orien10, d.getOrientacao());
        d.reduzAlcance_moveCriatura();
        d.setOrientacao("Oeste");
        d.setImagemCriatura("Oeste");
        d.reduzAlcance_moveCriatura();
        int pontosEsperados10 = 2;
        assertEquals(pontosEsperados10, d.getNrTesouros());
        String esperado = "true";
        d.estaCongelado = true;
        assertEquals(esperado, d.getEstaCongelado());
        d.estaCongelado = false;
        esperado = "false";
        assertEquals(esperado, d.getEstaCongelado());
        d.temSpell = false;
        assertEquals(esperado, d.getTemSpell());
        esperado = "true";
        d.temSpell = true;
        assertEquals(esperado, d.getTemSpell());
        d.idEquipe = 20;
        Team esperadoTeam = testeCreature.resistencia;
        Team realTeam = testeCreature.getTeam(d.getIdEquipe());
        assertEquals(esperadoTeam, realTeam);
        d.setOrientacao("Este");
        d.setImagemCriatura("Este");
        d.x = 0;
        d.y = 0;
        d.duplicaAlcance();
        assertEquals(6, d.getX());
    }
    @Test
    public void confereGetTeam() {
        FandeisiaGameManager testeGetTeam =  new FandeisiaGameManager();
        Creature c2 = new Anao(1, "An達o", 10, 10, 10, "Norte");
        Team result = testeGetTeam.getTeam(c2.getIdEquipe());
        assertEquals(result, testeGetTeam.ldr);
    }

}
